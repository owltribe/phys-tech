"""init

Revision ID: 0001
Revises: 
Create Date: 2024-01-31 14:48:47.367574

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('ORGANIZATION', 'CLIENT', name='user_role_enum'), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('organization',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('bin', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('contact', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('category', sa.Enum('SCIENTIFIC_ORGANIZATION', 'UNIVERSITY', 'TECHNOPARK', 'COMMERCIAL_LABORATORY_COMPANY', name='organization_category_enum'), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='fk_organization_owner', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('expected_result', sa.String(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], name='fk_service_organization', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_request',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'COMPLETED', name='servicerequest_status_enum'), nullable=False),
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('requested_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['requested_by_id'], ['user.id'], name='fk_service_request_user', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], name='fk_service_request_service'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_request')
    # Enum drop (this code was written manually)
    op.execute('DROP TYPE servicerequest_status_enum;')
    op.drop_table('service')
    op.drop_table('organization')
    # Enum drop (this code was written manually)
    op.execute('DROP TYPE organization_category_enum;')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # Enum drop (this code was written manually)
    op.execute('DROP TYPE user_role_enum;')
    op.drop_table('event')
    # ### end Alembic commands ###
