"""enum_eng

Revision ID: 0008
Revises: 0007
Create Date: 2024-01-30 18:29:39.289252

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0008'
down_revision: Union[str, None] = '0007'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


import sqlalchemy as sa
from alembic import op

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename old enums and create new ones
    op.execute("ALTER TYPE category RENAME TO category_old")
    op.execute("ALTER TYPE servicerequeststatus RENAME TO servicerequeststatus_old")

    category_new = sa.Enum('Scientific Organization', 'University', 'Technopark', 'Commercial laboratory company', name='category')
    category_new.create(op.get_bind())

    servicerequeststatus_new = sa.Enum('Pending', 'Approved', 'Rejected', 'Completed', name='servicerequeststatus')
    servicerequeststatus_new.create(op.get_bind())

    # Update the columns to use the new enums
    op.alter_column('organization', 'category', type_=category_new, postgresql_using='category::text::category')
    op.alter_column('service_request', 'status', type_=servicerequeststatus_new, postgresql_using='status::text::servicerequeststatus')

    # Drop the old enums
    op.execute("DROP TYPE category_old")
    op.execute("DROP TYPE servicerequeststatus_old")
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename current enums and create the old ones
    op.execute("ALTER TYPE category RENAME TO category_new")
    op.execute("ALTER TYPE servicerequeststatus RENAME TO servicerequeststatus_new")

    category_old = sa.Enum('Научная организация', 'Вуз', 'Технопарк', 'Коммерческая Лабораторная компания', name='category')
    category_old.create(op.get_bind())

    servicerequeststatus_old = sa.Enum('Ожидается', 'Утверждено', 'Отклонено', 'Завершено', name='servicerequeststatus')
    servicerequeststatus_old.create(op.get_bind())

    # Update the columns to use the old enums
    op.alter_column('organization', 'category', type_=category_old, postgresql_using='category::text::category_old')
    op.alter_column('service_request', 'status', type_=servicerequeststatus_old, postgresql_using='status::text::servicerequeststatus_old')

    # Drop the new enums
    op.execute("DROP TYPE category_new")
    op.execute("DROP TYPE servicerequeststatus_new")
    # ### end Alembic commands ###

